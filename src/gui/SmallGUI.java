/*
 * SmallGUI.java
 *
 * Created on Oct 27, 2010, 3:39:36 PM
 */
package dcrs.gui;

import dcrs.events.OnRouteSecured;
import dcrs.railway.Train;
import java.awt.Point;
import dcrs.railway.Railway;
import dcrs.railway.Sector;
import dcrs.routing.RouteFactory;
import javax.swing.ButtonGroup;
import java.lang.Object;
import dcrs.events.OnRoute;
import java.util.ArrayList;

/**
 *
 * @author tcstrain & Nevena :)
 */
public class SmallGUI extends RailwayGUIFrame implements Runnable {

    /**
     * Position X at which the next opened GUI will be placed. It is incremented
     * every time a window is made.
     */
    private static int positionX = 20;
    public boolean isInFribourg = true;
    public ArrayList<Sector> sectors = new ArrayList<Sector>();
    /**
     * The train controlled by the GUI
     */
    Train train;
    Railway railway;

    /**
     * Constructor of the class. Takes a train as parameter. The train will be
     * started by clicking on the button.
     *
     * @param train
     */
    public SmallGUI(Train train) {
        initComponents();
        this.train = train;
        this.setVisible(true);
        this.setLocation(new Point(positionX, getLocation().x));
        positionX += this.getWidth();
        railway = Railway.instance();
        Fribourg.setVisible(false);
        via.setVisible(false);
        FromTo.setVisible(false);
        groupButton();
        GruyereStat.setVisible(false);
        SendToStationPanel.setVisible(false);
        StartLine.setVisible(true);
        SendToStation.setVisible(true);
        lblTrain.setVisible(false);
        chooseOtherTrain.setVisible(false);
        NameLine.setVisible(true);
        WARNING.setVisible(false);
        (new Thread(this)).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        SendToStationPanel = new javax.swing.JPanel();
        via = new javax.swing.JPanel();
        b = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Gruyere = new javax.swing.JRadioButton();
        directly = new javax.swing.JRadioButton();
        Jstations = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        FromTo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        From = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        GruyereStat = new javax.swing.JPanel();
        non = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        To = new javax.swing.JLabel();
        Fribourg = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        StartLine = new javax.swing.JButton();
        SendToStation = new javax.swing.JButton();
        lblTrain = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        NameLine = new javax.swing.JLabel();
        chooseOtherTrain = new javax.swing.JButton();
        WARNING = new javax.swing.JPanel();
        Worning2 = new javax.swing.JLabel();
        WORNING1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        SendToStationPanel.setLayout(new java.awt.GridBagLayout());

        b.setText("via");

        jPanel1.setBackground(new java.awt.Color(255, 102, 204));

        Gruyere.setText("Gruyere");

        directly.setText("DIRECTLY!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Gruyere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(directly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Gruyere)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directly)
                .addContainerGap())
        );

        javax.swing.GroupLayout viaLayout = new javax.swing.GroupLayout(via);
        via.setLayout(viaLayout);
        viaLayout.setHorizontalGroup(
            viaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(457, 457, 457))
        );
        viaLayout.setVerticalGroup(
            viaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viaLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(b))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = -436;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        SendToStationPanel.add(via, gridBagConstraints);

        Jstations.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gruyere", "Schwarzsee" }));
        Jstations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JstationsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 18, 0, 0);
        SendToStationPanel.add(Jstations, gridBagConstraints);

        jLabel1.setText("Select the destination:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 8, 0, 0);
        SendToStationPanel.add(jLabel1, gridBagConstraints);

        send.setBackground(new java.awt.Color(255, 204, 255));
        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 48, 0, 104);
        SendToStationPanel.add(send, gridBagConstraints);

        FromTo.setBackground(new java.awt.Color(255, 153, 255));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dcrs/gui/station2.jpg"))); // NOI18N

        From.setText("jLabel3");

        jProgressBar1.setForeground(new java.awt.Color(255, 51, 204));
        jProgressBar1.setStringPainted(true);

        GruyereStat.setBackground(new java.awt.Color(255, 153, 255));

        non.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dcrs/gui/station2.jpg"))); // NOI18N

        jLabel5.setText("Gruyere");

        javax.swing.GroupLayout GruyereStatLayout = new javax.swing.GroupLayout(GruyereStat);
        GruyereStat.setLayout(GruyereStatLayout);
        GruyereStatLayout.setHorizontalGroup(
            GruyereStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GruyereStatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GruyereStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(non, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        GruyereStatLayout.setVerticalGroup(
            GruyereStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GruyereStatLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(1, 1, 1)
                .addComponent(non, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 153, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dcrs/gui/station2.jpg"))); // NOI18N

        To.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(To, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(To)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FromToLayout = new javax.swing.GroupLayout(FromTo);
        FromTo.setLayout(FromToLayout);
        FromToLayout.setHorizontalGroup(
            FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FromToLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(From)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(GruyereStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FromToLayout.setVerticalGroup(
            FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FromToLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FromToLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(FromToLayout.createSequentialGroup()
                        .addGroup(FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(From)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FromToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(GruyereStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72))))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = -57;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 0);
        SendToStationPanel.add(FromTo, gridBagConstraints);

        Fribourg.setBackground(new java.awt.Color(255, 204, 255));
        Fribourg.setText("Go back to Fribi");
        Fribourg.setAlignmentY(0.0F);
        Fribourg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FribourgActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 17, 20, 0);
        SendToStationPanel.add(Fribourg, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 0);
        getContentPane().add(SendToStationPanel, gridBagConstraints);

        jSplitPane2.setBackground(new java.awt.Color(255, 153, 255));

        StartLine.setBackground(new java.awt.Color(255, 153, 255));
        StartLine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        StartLine.setText("          Start line          ");
        StartLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartLineActionPerformed(evt);
            }
        });
        jSplitPane2.setLeftComponent(StartLine);

        SendToStation.setBackground(new java.awt.Color(255, 153, 255));
        SendToStation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SendToStation.setText("Send train to station");
        SendToStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendToStationActionPerformed(evt);
            }
        });
        jSplitPane2.setRightComponent(SendToStation);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 11, 0);
        getContentPane().add(jSplitPane2, gridBagConstraints);

        lblTrain.setText("jLabel4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 17, 0, 0);
        getContentPane().add(lblTrain, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Blue train", "Red train", "Green train" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 147, 0, 0);
        getContentPane().add(jComboBox1, gridBagConstraints);

        NameLine.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        NameLine.setText("Please select the train you want to run");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 17, 0, 0);
        getContentPane().add(NameLine, gridBagConstraints);

        chooseOtherTrain.setBackground(new java.awt.Color(255, 153, 255));
        chooseOtherTrain.setText("Run some other train");
        chooseOtherTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseOtherTrainActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 17, 0, 0);
        getContentPane().add(chooseOtherTrain, gridBagConstraints);

        WORNING1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        WORNING1.setForeground(new java.awt.Color(255, 0, 51));
        WORNING1.setText("One train can´t be in two places at same time!!!!");

        javax.swing.GroupLayout WARNINGLayout = new javax.swing.GroupLayout(WARNING);
        WARNING.setLayout(WARNINGLayout);
        WARNINGLayout.setHorizontalGroup(
            WARNINGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WARNINGLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WARNINGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Worning2)
                    .addComponent(WORNING1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        WARNINGLayout.setVerticalGroup(
            WARNINGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WARNINGLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WORNING1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Worning2)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipady = -12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 29, 0, 0);
        getContentPane().add(WARNING, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Train getTrain() {
        return train;
    }

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        WARNING.setVisible(false);
        train.setLine(null);
        // if train already has a route and "send" button is clicked again, warning message is displayed
        if (train.getRoute() != null) {
            System.out.println("Train is already on the route");
            Worning2.setText("Please press Send button again when the current task is completed ");
            WARNING.setVisible(true);
            return;
        }
        FromTo.setVisible(true);
        Fribourg.setVisible(true);
        Fribourg.setEnabled(true);
        via.setVisible(false);
        // If the chosen destination is Schwarzsee and "Directly" is selected or 
        // the destination is "Gruyere" we request the route to specified station.
        // If destination is Schwarzsee and "Gruyere" is selected
        // we´re starting a line Fribourg-Gruyere-Schwarzsee
        if (Jstations.getSelectedItem().toString() == "Schwarzsee") {
            if (isInFribourg == false) {
                via.setVisible(false);
                From.setText(To.getText().toString());
                To.setText("Schwarzsee");
                new OnRouteSecured(train);
                RouteFactory.instance().requestRoute(train, Railway.instance().getStationById("Schwarzsee"));
            } else {
                From.setText("Fribourg");
                To.setText("Schwarzsee");
                if (Gruyere.isSelected()) {
                    GruyereStat.setVisible(true);
                    train.setLine(railway.getLineById("FGS-commuting"));
                    train.startLine();
                    train.getLine().setNonLooping();
                } else if (directly.isSelected()) {
                    GruyereStat.setVisible(false);
                    new OnRouteSecured(train);
                    RouteFactory.instance().requestRoute(train, Railway.instance().getStationById("Schwarzsee"));
                }
            }
            isInFribourg = false;
            Fribourg.setVisible(true);
        } else if (Jstations.getSelectedItem().toString() == "Gruyere") {
            if (isInFribourg == false) {
                From.setText(To.getText().toString());
            } else {
                From.setText("Fribourg");
            }
            To.setText("Gruyere");
            GruyereStat.setVisible(false);
            new OnRouteSecured(train);
            RouteFactory.instance().requestRoute(train, Railway.instance().getStationById("Gruyere"));
            isInFribourg = false;
            Fribourg.setVisible(true);
        }

    }//GEN-LAST:event_sendActionPerformed

    public void run() {
        while (true) {
            update();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                //Logger.logException(ex, "");
            }
        }
    }
    // method used to update progress bar called from run() method

    public void update() {
        if (train.getRoute() != null) {
            int visitedLength = train.getRoute().getInitialLengthOfSectorsAhead() - train.getRoute().LengthOfSectorsAhead();
            float x = ((float) visitedLength) / train.getRoute().getInitialLengthOfSectorsAhead() * 100;
            jProgressBar1.setValue((int) x);

        }
    }

    private void JstationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JstationsActionPerformed
        if (Jstations.getSelectedItem().toString() == "Schwarzsee" && isInFribourg == true) {
            via.setVisible(true);
        } else {
            via.setVisible(false);
        }
    }//GEN-LAST:event_JstationsActionPerformed

    private void FribourgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FribourgActionPerformed
        //sends train to Fribourg from current place
        WARNING.setVisible(false);
        if (train.getRoute() != null) {
            System.out.println("Train is already on the route");
            Worning2.setText("Please press Go back to Fribi button again when the current task is completed ");
            WARNING.setVisible(true);
            return;
        }
        train.setLine(null);
        From.setText(Jstations.getSelectedItem().toString());
        To.setText("Fribourg");
        via.setVisible(false);
        Fribourg.setEnabled(false);
        if (Jstations.getSelectedItem().toString() == "Schwarzsee" && Gruyere.isSelected()) {
            train.setLine(railway.getLineById("FGS-commuting"));
            train.startLine();
            train.getLine().setNonLooping();
        } else {
            RouteFactory.instance().requestRoute(train, Railway.instance().getStationById("Fribourg"));
        }
        isInFribourg = true;
    }//GEN-LAST:event_FribourgActionPerformed

    private void StartLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartLineActionPerformed
        // After we use some train, it doesn`t exist anymore in ComboBox.
        // If just one item is in ComboBox we can´t "Run some other train" anymore
        // because they are all already running
        if (jComboBox1.getItemCount() == 1) {
            chooseOtherTrain.setVisible(false);
        } else {
            chooseOtherTrain.setVisible(true);
        }
        lblTrain.setVisible(false);
        jSplitPane2.setVisible(false);
        jComboBox1.setVisible(false);
        train.getLine().isLooping();
        train.startLine();
        this.send.setEnabled(false);
        // Notifications about which line is started
        if (train.getLine() == railway.getLineById("FG-commuting")) {
            NameLine.setText(train.getId().toString() + " started a line Fribourg-Gruyere");
            NameLine.setVisible(true);
        }
        if (train.getLine() == railway.getLineById("FGS-commuting")) {
            NameLine.setText(train.getId().toString() + " started a line Fribourg-Gruyere-Schwarzsee");
            NameLine.setVisible(true);
        }
        if (train.getLine() == railway.getLineById("FS-commuting")) {
            NameLine.setText(train.getId().toString() + " started a line Fribourg-Schwarzsee");
            NameLine.setVisible(true);
        }

    }//GEN-LAST:event_StartLineActionPerformed

    private void SendToStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendToStationActionPerformed
        // After we use some train, it doesn`t exist anymore in ComboBox
        // if just one item is in ComboBox we can´t "Run some other train" anymore
        // because they are already runing
        if (jComboBox1.getItemCount() == 1) {
            chooseOtherTrain.setVisible(false);
        } else {
            chooseOtherTrain.setVisible(true);
        }
        NameLine.setVisible(false);
        SendToStationPanel.setVisible(true);
        train.setLine(null);
        jSplitPane2.setVisible(false);
        jComboBox1.setVisible(false);
        lblTrain.setText("You are controlling " + train.getId().toString());
        lblTrain.setVisible(true);
        FromTo.setVisible(false);
        if (Jstations.getSelectedItem().toString() == "Schwarzsee") {
            via.setVisible(true);
            Gruyere.setSelected(false);
        }
    }//GEN-LAST:event_SendToStationActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // here we set the train that we want to run
        if (jComboBox1.getSelectedItem().toString() == "Blue train") {
            this.train = railway.getTrainById("blueTrain");
            this.lblTrain.setText(train.getId());

        } else if (jComboBox1.getSelectedItem().toString() == "Red train") {
            this.train = railway.getTrainById("redTrain");
            this.lblTrain.setText(train.getId());
        } else if (jComboBox1.getSelectedItem().toString() == "Green train") {
            this.train = railway.getTrainById("greenTrain");
            this.lblTrain.setText(train.getId());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void chooseOtherTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseOtherTrainActionPerformed
        // removing used train from ComboBox
        if (this.train.getId().equals("blueTrain")) {
            jComboBox1.removeItem("Blue train");
        } else if (this.train.getId().toString().equals("redTrain")) {
            jComboBox1.removeItem("Red train");
        } else if (this.train.getId().toString().equals("greenTrain")) {
            jComboBox1.removeItem("Green train");
        }
        WARNING.setVisible(false);
        isInFribourg = true;
        lblTrain.setVisible(false);
        NameLine.setText("Please select the train you want to run");
        jSplitPane2.setVisible(true);
        SendToStationPanel.setVisible(false);
        chooseOtherTrain.setVisible(false);
        NameLine.setVisible(true);
        jComboBox1.setVisible(true);
        FromTo.setVisible(false);
    }//GEN-LAST:event_chooseOtherTrainActionPerformed
    private void groupButton() {
        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(Gruyere);
        bg1.add(directly);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Fribourg;
    private javax.swing.JLabel From;
    private javax.swing.JPanel FromTo;
    private javax.swing.JRadioButton Gruyere;
    private javax.swing.JPanel GruyereStat;
    private javax.swing.JComboBox Jstations;
    private javax.swing.JLabel NameLine;
    private javax.swing.JButton SendToStation;
    private javax.swing.JPanel SendToStationPanel;
    private javax.swing.JButton StartLine;
    private javax.swing.JLabel To;
    private javax.swing.JPanel WARNING;
    private javax.swing.JLabel WORNING1;
    private javax.swing.JLabel Worning2;
    private javax.swing.JLabel b;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton chooseOtherTrain;
    private javax.swing.JRadioButton directly;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JLabel lblTrain;
    private javax.swing.JLabel non;
    private javax.swing.JButton send;
    private javax.swing.JPanel via;
    // End of variables declaration//GEN-END:variables
}
